type RegisterUserResult = 
 variant {
   err: RegisterUserError;
   ok: principal;
 };
type RegisterUserError = 
 variant {
   anonymousUser;
   insufficientCycles;
   missingUserCanister;
   userNotFound;
 };
service : {
  cyclesInformation: () -> (record {
                              balance: nat;
                              capacity: nat;
                            });
  registerUser: () -> (RegisterUserResult);
  requestCycles: (nat) -> (record {accepted: nat64;});
  upgradeUserCanisters: () -> () oneway;
  walletReceive: () -> (record {accepted: nat64;});
}
